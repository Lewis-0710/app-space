{"version":3,"sources":["../../controllers/app.js"],"names":["tag","module","exports","appName","type","required","description","platform","enum","describe","icon","page","default","size","appId","versionId","updateMode","require","active","String","currentVersionCode","appShortUrl","password","label","status","AppRouter","createApp","ctx","next","user","state","data","body","request","app","models","App","shortUrl","Math","random","toString","substring","creator","username","ownerId","_id","save","collaborator","Collaborator","uid","role","getApps","query","collaborators","find","_","isEmpty","appIds","map","v","result","getAppDetail","validatedParams","appInfo","verify","checkApp","checkRole","deleteApp","mergeAppId","updateOne","Version","deleteMany","deleteOne","getAppVersions","versions","sort","createdAt","limit","skip","getAppVersionDetail","version","findById","Error","deleteAppVersion","setUpdateMode","findByIdAndUpdate","setAppProfile","installWithPwd","installPwd","autoPublish","showHistory","console","log","setVersionProfile","uploadAt","Date","now","update","appVersion","versionInfo","common","validatorVersion","minVersion","maxVersion","releaseVersion","checkUpdate","tempVersion","findOne","grayScaleLimit","versionCode","grayVersion","forceVersion","getAppByShort","mergeApp","mergeHistory","history","item","downloadPath","downloadUrl","installUrl","tempResult","length","push","needAuth","getAppPlist","fs","readFileSync","fpath","join","__dirname","template","rendered","mustache","render","bundleID","bundleId","versionName","fileSize","iconUrl","getBlobDownloadUrl","set","addDownloadCount","downloadCount","metric","PackagesMetrics","package_id","create","downloaded","updated_at","reportStatusDownload","reportStatusDeploy","statusInt","installed","failed"],"mappings":"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","file":"app.js","sourcesContent":["import {\n    request,\n    summary,\n    body,\n    tags,\n    middlewares,\n    path,\n    query,\n    description\n} from '../swagger';\nimport fs from 'fs';\nimport config from '../config'\nimport { APIError } from \"../utils/rest\";\nimport { getIp, responseWrapper } from \"../utils/util\";\nimport fpath from 'path';\nimport mustache from 'mustache';\nimport _ from 'lodash'\n\nimport models from  '../model'\nimport verify from \"../utils/verify\";\nimport common from \"../utils/common\";\n\nconst tag = tags(['AppsResource']);\n\nmodule.exports = class AppRouter {\n    @request('post', '/api/apps/create')\n    @summary(\"创建应用\")\n    @tag\n    @body({\n        appName: {type: 'string', required: true, description: '应用名称'},\n        platform: {type: 'string', required: true,enum:['ios','android','rn'], description:  '平台 ios/android/rn'},\n        describe: {type: 'string', required: false, description: '应用描述'},\n        icon: {type: 'string',description:'应用图标'},\n    })\n    static async createApp(ctx, next) {\n        let user = ctx.state.user.data;\n        let body = ctx.request.body;\n        let app = new models.App({\n            appName: body.appName,\n            platform: body.platform,\n            describe: body.describe,\n            icon:body.icon,\n            shortUrl :Math.random().toString(36).substring(2, 5) + Math.random().toString(36).substring(2, 5),\n            creator:user.username,\n            ownerId:user._id\n        });\n        await app.save();\n        let collaborator =  new models.Collaborator({\n            appId:app._id,\n            uid:user._id,\n            role:'owner'\n        })\n        await collaborator.save()\n        ctx.body = responseWrapper(true, \"创建应用成功\")\n    }\n    @request('get', '/api/apps')\n    @summary(\"获取App列表\")\n    @query(\n        {\n        page:{type:'number',default:0,description:'分页页码(可选)'},\n        size:{type:'number',default:10,description:'每页条数(可选)'}\n    })\n    @tag\n    static async getApps(ctx, next) {\n        let page = ctx.query.page || 0\n        let size = ctx.query.size || 10\n        const user = ctx.state.user.data;\n        let collaborators = await models.Collaborator.find({uid:user._id})\n        if (!_.isEmpty(collaborators)) {\n            let appIds = _.map(collaborators, (v) => {\n                return v.appId\n            });\n            // console.log('appIds',appIds)\n            let result = await models.App.find({_id :{'$in':appIds}});//.limit(size).skip(page * size);\n            ctx.body = responseWrapper(result);\n        }else {\n            ctx.body = responseWrapper([])\n        }\n    }\n\n    @request('get', '/api/apps/{appId}')\n    @summary(\"获取某个应用详情\")\n    @tag\n    @path({\n        appId: { type: 'string', description: '应用id' }\n    })\n    static async getAppDetail(ctx, next) {\n        let uid = ctx.state.user.data._id;\n        let {appId} = ctx.validatedParams;\n        let appInfo = await verify.checkApp(appId)\n        await verify.checkRole(uid, appId, 'manager')\n        ctx.body = responseWrapper(appInfo)\n    }\n\n    @request('delete', '/api/apps/{appId}')\n    @summary(\"删除某个应用\")\n    @tag\n    @path({\n        appId: { type: 'string', description: '应用id' }\n    })\n    static async deleteApp(ctx, next) {\n        let uid = ctx.state.user.data._id;\n        let {appId} = ctx.validatedParams;\n        let appInfo = await verify.checkApp(appId)\n        if (appInfo.mergeAppId) {\n            await models.App.updateOne({_id: appInfo.mergeAppId}, {mergeAppId: ''});\n        }\n        await verify.checkRole(uid, appId, 'manager');\n        await models.Version.deleteMany({ appId:appId})\n        await models.App.deleteOne({ _id: appId })\n        ctx.body = responseWrapper(true, \"应用已删除\")\n    }\n\n    @request('get', '/api/apps/{appId}/versions')\n    @summary(\"获取某个应用的版本列表(分页)\")\n    @path({\n        appId: { type: 'string', description: '应用id' }\n    })\n    @query({\n        page: { type: 'number', default: 0, description: '分页页码(可选)' },\n        size: { type: 'number', default: 10, description: '每页条数(可选)' }\n    })\n    @tag\n    static async getAppVersions(ctx, next) {\n        let { page, size } = ctx.query\n        let uid = ctx.state.user.data._id;\n        let {appId} = ctx.validatedParams;\n        await verify.checkApp(appId)\n        await verify.checkRole(uid, appId, 'manager')\n        let versions = await models.Version.find({ appId: appId }).sort({createdAt:-1})\n            .limit(size).skip(page * size)\n        // let metrics = await models.PackagesMetrics.find({package_id:{'$in':versions.map((v)=>v._id)}})\n        // if (versions && metrics) {\n        //     versions = versions.map(item => {\n        //         for (const p of metrics) {\n        //             if (item._id == p.package_id) {\n        //                 item.downloadCount = p.downloaded\n        //                 break\n        //             }\n        //         }\n        //         return item\n        //     });\n        //     // console.log('metrics',metrics)\n        //     // console.log('packages',versions)\n        // }\n        ctx.body = responseWrapper(versions);\n    }\n\n    @request('get', '/api/apps/{appId}/versions/{versionId}')\n    @summary(\"获取某个应用的某个版本详情\")\n    @tag\n    @path({\n        appId: { type: 'string', description: '应用id' },\n        versionId: { type: 'string', description: '版本id' }\n    })\n    static async getAppVersionDetail(ctx, next) {\n        let uid = ctx.state.user.data._id;\n        let {appId,versionId} = ctx.validatedParams;\n        await verify.checkApp(appId)\n        await verify.checkRole(uid, appId, 'manager')\n        let version = await models.Version.findById({_id: versionId});\n        if (!version) {\n            throw new Error(\"应用不存在\")\n        }\n        ctx.body = responseWrapper(version)\n    }\n\n    @request('delete', '/api/apps/{appId}/versions/{versionId}')\n    @summary(\"删除某个版本\")\n    @tag\n    @path({\n        appId: { type: 'string', description: '应用id' },\n        versionId: { type: 'string', description: '版本id' }\n    })\n    static async deleteAppVersion(ctx, next) {\n        let uid = ctx.state.user.data._id;\n        let {appId,versionId} = ctx.validatedParams;\n        await verify.checkApp(appId)\n        await verify.checkRole(uid, appId, 'manager')\n\n        // todo\n        // try {\n        //     let findOne = await models.Version.findById({_id:versionId})\n        //     // 删除对应版本的文件\n        //     fs.unlinkSync(fpath.join(config.fileDir, findOne.downloadUrl))\n        // } catch(err) {\n        //     console.error(err)\n        // }\n\n        await models.Version.deleteOne({ _id: versionId })\n        ctx.body = responseWrapper(true, \"版本已删除\")\n    }\n\n    @request('post', '/api/apps/{appId}/updateMode')\n    @summary(\"设置应用或版发布更新方式/静默/强制/普通\")\n    @tag\n    @body({\n        updateMode: { type: 'string', require: true },\n        versionId: { type: 'string', description: \"如果传入了versionId则表示设置某个版本的更新方式\" }\n    })\n    @path({ appId: { type: 'string', require: true } })\n    static async setUpdateMode(ctx, next) {\n        let uid = ctx.state.user.data._id;\n        let {appId} = ctx.validatedParams;\n        await verify.checkApp(appId)\n        await verify.checkRole(uid, appId, 'manager')\n        let { versionId ,updateMode } = ctx.request.body\n        await models.Version.findByIdAndUpdate(versionId, {\n            updateMode: updateMode\n        })\n        ctx.body = responseWrapper(true, \"版本发布策略设置成功\")\n    }\n\n    @request('post', '/api/apps/{appId}/profile')\n    @summary(\"更新应用设置\")\n    @tag\n    @body({\n        'appName': 'string', //应用短连接\n        'shortUrl': 'string', //应用短连接\n        'installWithPwd': 'boolean', //应用安装是否需要密码\n        'installPwd': 'string', //应用安装的密码\n        'autoPublish': 'boolean', //新版本自动发布\n        'showHistory': 'boolean',//显示历史版本\n        'mergeAppId': 'string' //关联应用\n    })\n    @path({ appId: { type: 'string', required: true } })\n    static async setAppProfile(ctx, next) {\n        let uid = ctx.state.user.data._id;\n        let {appId} = ctx.validatedParams;\n        let appInfo =  await verify.checkApp(appId)\n        await verify.checkRole(uid, appId, 'manager')\n        let {shortUrl, installWithPwd, appName,installPwd, autoPublish,showHistory,mergeAppId} = ctx.request.body;\n        console.log('mergeAppId=', mergeAppId);\n        await models.App.findByIdAndUpdate(appId, { shortUrl,appName,installWithPwd,installPwd ,autoPublish,showHistory,mergeAppId})\n        if (mergeAppId) {\n            await models.App.findByIdAndUpdate(mergeAppId, { mergeAppId:appId})\n        }else if(appInfo.mergeAppId){\n            await models.App.findByIdAndUpdate(appInfo.mergeAppId, { mergeAppId:''})\n        }\n        ctx.body = responseWrapper(true, \"应用设置已更新\");\n    }\n\n    @request('post', '/api/apps/{appId}/{versionId}/profile')\n    @summary(\"更新版本设置设置\")\n    @tag\n    @body({\n        // 'installUrl':  { type: 'string', require: false,description:'更新文件的安装地址' },\n        'changeLog': { type: 'string', require: false,description:'更新描述' },\n        'appVersion': { type: 'string', require: false, description: 'RN支持版本' },\n        'active':{ type: 'bool', require: false,default:false, description: '是否激活'},\n        'grayScaleLimit':{ type: 'bool', require: false, description: '是否灰度' },\n        'grayScaleSize':{ type: 'number', default: 0, require: false, description: '灰度上限'},\n        'updateMode': { type: 'string', default: 'normal', enum: ['silent', 'normal', 'force'],description:'更新模式' }\n    })\n    @path({ appId: { type: 'string', required: true }, versionId: { type: 'string', required: true } })\n    static async setVersionProfile(ctx, next) {\n        let uid = ctx.state.user.data._id;\n        let {appId, versionId} = ctx.validatedParams;\n        await verify.checkApp(appId)\n        await verify.checkRole(uid, appId, 'manager')\n        console.log('setVersionProfile',ctx.request.body)\n        ctx.request.body.uploadAt = Date.now()\n        let update = ctx.request.body;\n        if (ctx.request.body.appVersion) {\n            let versionInfo = common.validatorVersion(ctx.request.body.appVersion);\n            if (!versionInfo[0]) {\n                throw new Error(`--targetBinaryVersion ${ctx.request.body.appVersion} not support.`);\n            }\n            update.minVersion = versionInfo[1];\n            update.maxVersion = versionInfo[2];\n        }\n        await models.Version.findByIdAndUpdate(versionId, update)\n        ctx.body = responseWrapper(true, \"版本设置已更新\")\n    }\n\n    @request('post', '/api/apps/{appId}/release')\n    @summary(\"发布或者取消发布某个版本\")\n    @tag\n    @path({ appId: { type: 'string', require: true } })\n    @body({\n        versionId: { type: 'string', require: true },\n        active: { type: 'bool', require: true }\n    })\n    static async releaseVersion(ctx, next) {\n        let uid = ctx.state.user.data._id;\n        let {appId} = ctx.validatedParams;\n        await verify.checkApp(appId)\n        await verify.checkRole(uid, appId, 'manager')\n        let version = await models.Version.findById(ctx.request.body.versionId)\n        if (!version) {\n            throw new Error(\"版本不存在\")\n        }\n        await models.Version.updateOne({_id: ctx.request.body.versionId},{active:ctx.request.body.active})\n        ctx.body = responseWrapper(true, ctx.request.body.active ? \"版本已发布\" : \"版本已关闭\")\n    }\n\n    @request('get', '/api/app/checkupdate/{appId}/{currentVersionCode}')\n    @summary(\"检查版本更新\")\n    @tag\n    @path({\n        appId: String,\n        currentVersionCode: String,\n    })\n    static async checkUpdate(ctx, next) {\n        let {appId, currentVersionCode} = ctx.validatedParams;\n        await verify.checkApp(appId)\n\n        let tempVersion = {};\n        //正常\n        let version = await models.Version.findOne({\n            appId: appId,\n            active: true,\n            grayScaleLimit: false,\n            versionCode: {'$gt': currentVersionCode}\n        }).sort({'versionCode':-1});\n\n        //灰度版本\n        let grayVersion = await models.Version.findOne({\n                appId: appId,\n                active: true,\n                grayScaleLimit: true,\n                versionCode: {'$gt': currentVersionCode},\n                '$expr': {//大于等于\n                    '$gte': ['$grayScaleSize', '$downloadCount']\n                }\n            }\n        ).sort({'versionCode':-1});\n\n        if (grayVersion && version) {\n            if (version.versionCode > grayVersion.versionCode) {\n                tempVersion = version;\n            } else {\n                tempVersion = grayVersion;\n            }\n        } else if (!grayVersion && version) {\n            tempVersion = version;\n        } else if (grayVersion && !version) {\n            tempVersion = grayVersion;\n        } else {\n            ctx.body = responseWrapper(false, \"您已经是最新版本了\");\n            return\n        }\n\n        //强制\n        let forceVersion = await models.Version.findOne({\n            appId: appId,\n            active: true,\n            updateMode: 'force',\n            grayScaleLimit: false,\n            versionCode: {'$gt': currentVersionCode}\n        });\n        if (!forceVersion) {\n            forceVersion = await models.Version.findOne({\n                    appId: appId,\n                    active: true,\n                    grayScaleLimit: true,\n                    updateMode: 'force',\n                    versionCode: {'$gt': currentVersionCode},\n                    '$expr': {//大于等于\n                        '$gte': ['$grayScaleSize', '$downloadCount']\n                    }\n                }\n            )\n        }\n\n        if (tempVersion && forceVersion) {\n            tempVersion.updateMode = 'force';\n        }\n\n        if (!tempVersion) {\n            ctx.body = responseWrapper(false, \"您已经是最新版本了\");\n        } else {\n            ctx.body = responseWrapper(tempVersion);\n        }\n\n    }\n\n    @request('post', '/api/app/shortUrl')\n    @summary(\"通过短链接获取应用最新版本\")\n    @tag\n    @path({ appShortUrl: { type: 'string', require: true } })\n    @body({\n        appShortUrl: { type: 'string', require: true },\n        password: { type: 'string', require: false }\n    })\n    static async getAppByShort(ctx, next) {\n        let { appShortUrl,password} =  ctx.request.body\n        console.log('password', password);\n        let appInfo = await models.App.findOne({ shortUrl: appShortUrl })\n        if (!appInfo) {\n            throw new Error(\"应用不存在\")\n        }\n        if (password && appInfo.installWithPwd == 1 && appInfo.installPwd !== password) {\n            throw new Error(\"密码不正确\");\n        }\n        let mergeApp;\n        let mergeHistory\n        if (appInfo.mergeAppId) {\n            mergeApp = await models.App.findOne({ _id: appInfo.mergeAppId })\n            mergeHistory = await models.Version.find({\n                    '$and': [{\n                        appId: appInfo.mergeAppId,\n                        active: true,\n                    }, {\n                        '$or': [{//激活没限制\n                            grayScaleLimit: false\n                        }, {//激活没到限制\n                            grayScaleLimit: true,\n                            '$expr': {//大于等于\n                                '$gte': ['$grayScaleSize', '$downloadCount']\n                            }\n                        }\n                        ]\n                    }]\n                }\n            ).sort({'createdAt':-1}).limit(10);\n        }\n        let history = await models.Version.find({\n                '$and': [{\n                    appId: appInfo._id,\n                    active: true,\n                }, {\n                    '$or': [{//激活没限制\n                        grayScaleLimit: false\n                    }, {//激活没到限制\n                        grayScaleLimit: true,\n                        '$expr': {//大于等于\n                            '$gte': ['$grayScaleSize', '$downloadCount']\n                        }\n                    }\n                    ]\n                }]\n            }\n        ).sort({'createdAt': -1}).limit(10) || [];\n        if (appInfo.installWithPwd == 1 && !password) {\n            history.map(item=>{\n                item.downloadPath = ''\n                item.downloadUrl = '';\n                item.installUrl = ''\n                return item\n            })\n        }\n\n        let tempResult = [{\n            'appInfo': appInfo,\n            'versionInfo': history && history.length > 0 ? history[0] : [],\n            'history': appInfo.showHistory == true  ? history : [],\n        }]\n        if (mergeApp) {\n            if (appInfo.installWithPwd == 1 && !password) {\n                mergeHistory.map(item=>{\n                     item.downloadPath = ''\n                     item.downloadUrl = ''\n                     item.installUrl = ''\n                    return item\n                })\n            }\n            mergeApp.installPwd = ''\n            tempResult.push({\n                'appInfo': mergeApp,\n                'versionInfo': mergeHistory && mergeHistory.length > 0 ? mergeHistory[0] : [],\n                'history': mergeApp.showHistory == true ? mergeHistory : [],\n            })\n        }\n        let needAuth = appInfo.installWithPwd == 1 && appInfo.installPwd != password\n        console.log('installPwd',appInfo.installPwd)\n        appInfo.installPwd = ''\n        console.log('installPwd',appInfo.installPwd)\n        console.log('needAuth',needAuth)\n        ctx.body = responseWrapper({'needAuth': needAuth, 'list': tempResult});\n    }\n\n\n    @request('get', '/api/plist/{appId}/{versionId}')\n    @summary(\"获取应用的plist文件\")\n    @tag\n    @path({ appId: { type: 'string', require: true }, versionId: { type: 'string', require: true } })\n    static async getAppPlist(ctx, next) {\n        let {appId,versionId} = ctx.validatedParams;\n        let app = await verify.checkApp(appId)\n        let version = await models.Version.findOne({ _id: versionId })\n        if (!version) {\n            throw new Error(\"版本不存在\")\n        }\n        // let url = common.getBlobDownloadUrl(version.downloadPath)\n        let result = fs.readFileSync(fpath.join(__dirname, \"..\", 'templates') + '/template.plist')\n        let template = result.toString();\n        let rendered = mustache.render(template, {\n            appName: app.appName,\n            bundleID: version.bundleId,\n            versionName: version.versionName,\n            downloadUrl: version.downloadUrl,\n            fileSize: version.size,\n            iconUrl: common.getBlobDownloadUrl(app.icon)\n        });\n        ctx.set('Content-Type', 'text/xml; charset=utf-8');\n        ctx.set('Access-Control-Allow-Origin', '*');\n        ctx.body = rendered\n    }\n\n    @request('get', '/api/count/{versionId}')\n    @summary(\"增加一次下载次数\")\n    @tag\n    @path({  versionId: { type: 'string', require: true } })\n    static async addDownloadCount(ctx, next) {\n        let {versionId} = ctx.validatedParams;\n\n        let version = await models.Version.findById(versionId)\n        if (version) {\n            await models.Version.updateOne({_id:versionId},{'downloadCount': version.downloadCount + 1})\n        }\n\n        let metric = await models.PackagesMetrics.findOne({package_id: versionId});\n        console.log('addDownloadCount downloaded...',metric)\n        if (!metric) {\n            console.log('addDownloadCount create...')\n            await models.PackagesMetrics.create({package_id: versionId, downloaded: 1})\n            await models.Version.create({package_id: versionId, downloaded: 1})\n        }else {\n            let downloaded = metric.downloaded || 0;\n            console.log('addDownloadCount downloaded...',downloaded)\n            await models.PackagesMetrics.updateOne({package_id: versionId},{downloaded: downloaded + 1,\n                updated_at: Date.now(),\n            })\n        }\n        ctx.body = responseWrapper(true, '下载次数已更新')\n    }\n\n    //兼容 code push\n    @request('post', '/api/v0.1/public/codepush/report_status/download')\n    @summary(\"增加一次下载次数 兼容code_push\")\n    @tag\n    @body({\n        label: { type: 'string', require: true ,description:'versionId'},\n    })\n    static async reportStatusDownload(ctx, next) {\n        let {label} = ctx.request.body;\n\n        let version = await models.Version.findById(label)\n        if (version) {\n            await models.Version.updateOne({_id:label},{'downloadCount': version.downloadCount + 1})\n        }\n\n        let metric = await models.PackagesMetrics.findById({package_id: label});\n        if (!metric) {\n            await models.PackagesMetrics.create({package_id: label, downloaded: 1})\n        }else {\n            await models.PackagesMetrics.updateOne({package_id: label},{downloaded: metric.downloaded + 1})\n        }\n        ctx.body = responseWrapper(true, '下载次数已更新')\n    }\n\n    //兼容 code push\n    @request('post', '/api/v0.1/public/codepush/report_status/deploy')\n    @summary(\"版本激活状态更新 兼容code_push\")\n    @tag\n    @body({\n        label: { type: 'string', require: true ,description:'versionId'},\n        status: { type: 'string', require: true, description:'DeploymentSucceeded/DeploymentFailed'},\n    })\n    static async reportStatusDeploy(ctx, next) {\n        let {label,status} = ctx.request.body;\n        let statusInt = 0\n        if (status == 'DeploymentSucceeded') {\n            statusInt = 1\n        }else if (status == 'DeploymentFailed') {\n            statusInt = 2\n        }\n        if (statusInt > 0) {\n\n        }\n        let metric = await models.PackagesMetrics.findById({package_id: label});\n        if (!metric) {\n            if (statusInt == 1) {\n                await models.PackagesMetrics.updateOne({package_id: label,\n                    downloaded:1,installed: 1, active: 1});\n            }else {\n                await models.PackagesMetrics.updateOne({package_id: label,\n                    downloaded:1,installed: 1, failed: 1});\n            }\n        }else {\n            if (statusInt == 1) {\n                await models.PackagesMetrics.updateOne({package_id: label},\n                    {installed: metric.installed + 1, active: metric.active+1});\n            }else {\n                await models.PackagesMetrics.updateOne({package_id: label},\n                    {installed: metric.installed + 1, failed: metric.failed+1});\n            }\n        }\n        ctx.body = responseWrapper(true, 'ok')\n    }\n}\n\n\n"]}