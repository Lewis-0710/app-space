{"version":3,"sources":["../../controllers/collaborators.js"],"names":["tag","module","exports","appId","type","required","memberId","role","description","emailList","items","userId","CollaboratorRouter","changeMemberRole","ctx","next","validatedParams","user","state","data","body","request","team","validator","userInTeamIsManager","_id","Error","Collaborator","updateOne","uid","addMember","collaborator","console","log","app","App","findOne","userList","User","find","email","$in","dif","_","difference","map","length","Mail","send","username","appName","config","baseUrl","addedMembers","v","unAddMembers","member","o","push","insertMany","u","message","Message","category","content","sender","receiver","save","removeMember","collaboratorOne","deleteMany","getMembers","collaborators","users","i","members","createAt","updateAt"],"mappings":"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","file":"collaborators.js","sourcesContent":["'use strict';\n\nimport {\n    request,\n    summary,\n    tags,\n    body,\n    query,\n    path,\n    description\n} from '../swagger';\nimport User  from \"../model/user\";\nimport Message from \"../model/message\";\nimport Collaborator from \"../model/collaborator\";\nimport App from \"../model/app_model\";\nimport { responseWrapper } from \"../utils/util\";\nimport Fawn from \"fawn\";\nimport mongoose from \"mongoose\";\nimport validator from \"../utils/validator\";\nimport Mail from \"../utils/mail\"\nimport config from \"../config\"\nimport _ from 'lodash';\n\n\nconst tag = tags(['团队成员']);\n\n\nmodule.exports = class CollaboratorRouter {\n\n    @request('post', '/api/collaborator/{appId}/role')\n    @summary('修改用户角色')\n    @tag\n    @path({\n        appId: {\n            type: 'string',\n            required: true\n        }\n    })\n    @body({ memberId: { type: 'string', required: true }, role: { type: 'string', required: true, description: \"传入manager或者guest\" } })\n    static async changeMemberRole(ctx, next) {\n        let { appId } = ctx.validatedParams;\n        let user = ctx.state.user.data;\n        let body = ctx.request.body\n        let team = validator.userInTeamIsManager(user._id, appId)\n        if (!team) {\n            throw new Error(\"没有权限修改该用户角色\")\n        }\n        if (body.role != 'manager' && body.role != 'guest') {\n            throw new Error(\"请传入正确的角色参数\")\n        }\n        await Collaborator.updateOne({ uid: body.memberId,appId:appId}, {\n            role:body.role\n        })\n        ctx.body = responseWrapper(true, \"用户角色已更新\")\n    }\n\n    @request('post', '/api/collaborator/{appId}/invite')\n    @summary('邀请某成员加入项目')\n    @tag\n    @body({\n        emailList: {\n            type: 'array',\n            items: {\n                type: 'string'\n            },\n            description: \"邮箱列表\",\n            required: true\n        },\n        role: { type: 'string', required: true, description: \"成员角色manager/guest\" }\n    })\n    @path({\n        appId: {\n            type: 'string',\n            required: true\n        },\n    })\n    static async addMember(ctx, next) {\n        let { appId} = ctx.validatedParams;\n        let user = ctx.state.user.data;\n        let {emailList,role} = ctx.request.body;\n        let collaborator = validator.userInTeamIsManager(user._id, appId)\n        if (!collaborator) {\n            throw new Error(\"您没有权限邀请用户加入\")\n        }\n        console.log('role',role)\n        if (!(role === 'manager' || role === 'guest')) {\n            throw new Error(\"请传入正确的用户角色\")\n        }\n\n        let app =  await App.findOne({_id:appId})\n        console.log(\"app\",app)\n        let userList = await User.find({\n            email: { $in: emailList }\n        })\n\n        // 如果用户不存在则发送邮件邀请\n        let dif = _.difference(emailList, _.map(userList, 'email'))\n        if (dif.length != 0) {\n            Mail.send(dif, `${user.username}邀请您加入${app.appName}`, `${user.username}邀请您加入${app.appName}\".如果您还没有注册发布平台，请点击${config.baseUrl}注册`)\n        }\n\n        let addedMembers = await Collaborator.find({appId:appId,uid:{'$in':userList.map((v)=>v._id)}},\"uid\")\n        let unAddMembers = []\n        for (let member of userList){\n            if(!_.find(addedMembers,(o)=>{\n                return o == member._id;\n            })){\n                unAddMembers.push({\n                    appId:appId,\n                    uid:member._id,\n                    role: role\n                })\n            }\n        }\n        console.log(\"unAddMembers\",unAddMembers)\n        await Collaborator.insertMany(unAddMembers)\n\n        for (let u of unAddMembers) {\n            let message = new Message();\n            message.category = \"INVITE\";\n            message.content = user.username + \"邀请您加入\" + app.appName + \"项目.\"\n            message.sender = user._id;\n            message.receiver = u.uid;\n            await message.save();\n        }\n        ctx.body = responseWrapper(true, \"已发送邀请\")\n    }\n\n    @request('delete', '/api/collaborator/{appId}/member/{userId}')\n    @summary('移除某个成员,或者自己离开团队')\n    @tag\n    @path({\n        appId: {\n            type: 'string',\n            required: true\n        },\n        userId: {\n            type: 'string',\n            required: true\n        }\n    })\n    static async removeMember(ctx, next) {\n        let { appId, userId } = ctx.validatedParams;\n        let user = ctx.state.user.data;\n        //如果传入的id和当前登录用户的id相等 表示是自己离开团队\n        let collaborator = validator.userInTeamIsManager(user._id, appId)\n\n        if (!collaborator) {\n            throw new Error(\"该用户没有权限删除用户\")\n        }\n        let collaboratorOne = await Collaborator.findOne({appId: appId,uid:userId})\n        if (collaboratorOne.role == 'owner'){\n            throw new Error(\"管理员用户无法删除用户\")\n        }\n        await Collaborator.deleteMany({appId: appId,uid:userId})\n\n        ctx.body = responseWrapper(true, \"删除成功\")\n    }\n\n\n    @request('get', '/api/collaborator/{appId}/members')\n    @summary('获取团队成员列表')\n    @tag\n    @path({\n        appId: {\n            type: 'string',\n            required: true\n        }\n    })\n    static async getMembers(ctx, next) {\n        let { appId } = ctx.validatedParams;\n        let user = ctx.state.user.data;\n        //如果传入的id和当前登录用户的id相等 表示是自己离开团队\n        let collaborators = await Collaborator.find({\n            appId: appId})\n        if (!collaborators) {\n            throw new Error(\"成员不存在\")\n        }\n        console.log(\"collaborators\",collaborators)\n        let users = await User.find({_id:{$in:collaborators.map(i=>i.uid)}})\n        let members = []\n        for (let member of collaborators){\n            for (let u of users){\n                if (member.uid == u._id){\n                    members.push({\n                        username:u.username,\n                        email:u.email,\n                        _id:member._id,\n                        uid:member.uid,\n                        appId:member.appId,\n                        role:member.role,\n                        createAt:member.createAt,\n                        updateAt:member.updateAt,\n                    })\n                }\n            }\n        }\n        ctx.body = responseWrapper(members)\n    }\n\n\n\n}\n"]}