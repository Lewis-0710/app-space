{"version":3,"sources":["../index.js"],"names":["Koa","require","bodyParser","rest","serve","cors","koajwt","log4js","log","getLogger","app","configure","_","get","config","appenders","console","type","categories","default","level","helper","Helper","use","ctx","next","catch","err","status","body","path","join","__dirname","common","initStorageDir","then","r","debug","getStorageDir","request","split","filter","item","shift","response","fs","readFileSync","set","middleware","secret","unless","skip","if","key","headers","user","Verify","auth","error","state","data","restify","router","routes","iosInstallUrl","https","enforceHttps","options","cert","createServer","callback","listen","iosInstallPort","AuthRouter","initAdminAccount","port"],"mappings":"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","file":"index.js","sourcesContent":["// 导入koa，和koa 1.x不同，在koa2中，我们导入的是一个class，因此用大写的Koa表示:\nimport router from './controller';\nimport config from './config';\n\nconst Koa = require('koa')\nconst bodyParser = require('koa-bodyparser')\n    // 导入controller middleware:\nconst rest = require('./utils/rest')\nconst serve = require('koa-static');\nconst cors = require('koa-cors')\nconst koajwt = require('koa-jwt')\nimport path from 'path'\nimport fs from'fs'\n\nimport Verify from './utils/verify'\nimport Helper from './utils/MiddleHelper'\nimport { isNull, isUndefined } from 'util';\nimport _ from \"lodash\";\nimport common from \"./utils/common\";\nconst log4js = require('log4js');\nconst  log = log4js.getLogger(\"cps:index\");\nimport AuthRouter from  \"./controllers/auth\"\nconst app = new Koa()\nlog4js.configure(_.get(config, 'log4js', {\n    appenders: {console: { type: 'console'}},\n    categories : { default: { appenders: ['console'], level: 'info' }}\n}));\nlog4js.getLogger(\"startup\")\n\nconst  helper = new Helper()\n// 中间件 自定义了 401 响应，将用户验证失败的相关信息返回给浏览器\napp.use(function(ctx, next){\n    return next().catch((err) => {\n        if (401 == err.status) {\n            ctx.status = 401;\n            ctx.body = 'Protected resource, use Authorization header to get access\\n';\n        } else {\n            throw err;\n        }\n    });\n});\napp.use(cors())\napp.use(bodyParser())\n// app.use(serve(path.join(__dirname, 'public')));\n// app.use(serve(path.resolve(config.fileDir)))\napp.use(serve(path.join(__dirname, '..', 'client/dist')));\ncommon.initStorageDir().then(r => log.debug('storage dir=', r));\napp.use(serve(common.getStorageDir()));\napp.use(function(ctx, next) {\n    console.log('ctx.request',ctx.request.path)\n  // 不是以 api 开头的请求, 返回前端页面.\n  if (ctx.request.path.split('/').filter(item => item !== '').shift() !== 'api') {\n    console.log('ctx.request','html...')\n    ctx.response.type = 'html';\n    ctx.response.body = fs.readFileSync(path.join(__dirname, '..', 'client/dist/index.html'), 'utf8');\n  } else {\n    ctx.set(\"Access-Control-Allow-Origin\", \"*\");\n    ctx.set(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, Authorization, X-CodePush-Plugin-Version, X-CodePush-Plugin-Name, X-CodePush-SDK-Version\");\n    ctx.set(\"Access-Control-Allow-Methods\",\"PUT,POST,GET,PATCH,DELETE,OPTIONS\");\n    log.debug(\"use set Access-Control Header\");\n    return next();\n  }\n})\n\nlet middleware = koajwt({ secret: config.secret, debug: true }).unless({\n    path: [\n        '/api/user/register',\n        '/api/user/login',\n        '/api/user/resetPassword',\n        '/api/swagger',\n        '/api/swagger.json',\n        // /\\/v0.1\\/public\\/.+/,\n        /\\/api\\/plist\\/.+/,\n        /\\/api\\/count\\/.+/,\n        /\\/api\\/app\\/.+/\n    ]\n})\n\napp.use(helper.skip(middleware).if((ctx) => {\n    let key = ctx.request.headers['apikey']\n    return !isUndefined(key)\n}))\n\napp.use(async(ctx, next) => {\n    let key = ctx.request.headers['apikey']\n    if (!isUndefined(key)) {\n        let user = await Verify.auth(key).catch(error => {\n            throw error\n        })\n        ctx.state.user = { data: user }\n        await next()\n    } else {\n        await next()\n    }\n})\n\napp.use(rest.restify())\napp.use(router.routes())\n\n\n//https\n\nif (config.iosInstallUrl) {\n    const https = require('https');\n    const enforceHttps = require('koa-sslify').default;\n    app.use(enforceHttps);\n    const options = {\n        key: fs.readFileSync('./ssl/server.key'),\n        cert: fs.readFileSync('./ssl/server.crt')\n    }\n    https.createServer(options, app.callback()).listen(config.iosInstallPort);\n}\nAuthRouter.initAdminAccount().then(r => {\n    // console.log('初始化用户完成...')\n})\nexport default app.listen(config.port, () => {\n    console.log(`App is listening on ${config.port}.`);\n});\n"]}