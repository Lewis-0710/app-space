{"version":3,"sources":["../../../library/apkparser/apkparser.js"],"names":["os","require","exec","execFile","path","extractRaw","parseApk","parseOutput","filename","cb","exeName","type","Error","join","__dirname","maxBuffer","err","out","text","depth","element","indent","input","line","matches","name","parent","parts","rest","value","_i","_len","lines","split","result","i","length","kvs","module","exports"],"mappings":";;AAAA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,eAAR,EAAyBE,QAApC;;AAEA,IAAIC,OAAOH,QAAQ,MAAR,CAAX;AACA,IAAII,UAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,WAAJ;;AAEAD,WAAW,UAASE,QAAT,EAAmBC,EAAnB,EAAuB;AAChC,MAAIC,UAAU,IAAd;AACA,MAAIV,GAAGW,IAAH,OAAc,QAAlB,EAA4B;AACxBD,cAAU,iBAAV;AACH,GAFD,MAEO,IAAIV,GAAGW,IAAH,OAAc,OAAlB,EAA2B;AAC9BD,cAAU,YAAV;AACH,GAFM,MAEA;AACH,UAAM,IAAIE,KAAJ,CAAU,aAAV,CAAN;AACH;AACD,SAAOV,KAAKE,KAAKS,IAAL,CAAUC,SAAV,EAAqBJ,OAArB,CAAL,EAAoC,CAAC,MAAD,EAAS,SAAT,EAAoBF,QAApB,CAApC,EAAmE;AACxEO,eAAW,OAAO,IAAP,GAAc;AAD+C,GAAnE,EAEJ,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACpB,QAAID,GAAJ,EAAS;AACP,aAAOP,GAAGO,GAAH,CAAP;AACD;AACD,WAAOT,YAAYU,GAAZ,EAAiBR,EAAjB,CAAP;AACD,GAPM,CAAP;AAQD,CAjBD;;AAmBAF,cAAc,UAASW,IAAT,EAAeT,EAAf,EAAmB;AAC/B,MAAIU,KAAJ,EAAWC,OAAX,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,IAAnC;AACA,MAAIC,OAAJ,EAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCjB,IAAxC,EAA8CkB,KAA9C,EAAqDC,EAArD,EAAyDC,IAAzD;AACA,MAAI,CAACb,IAAL,EAAW;AACT,WAAOT,GAAG,IAAIG,KAAJ,CAAU,WAAV,CAAH,CAAP;AACD;AACD,MAAIoB,QAAQd,KAAKe,KAAL,CAAW,IAAX,CAAZ;AACA,MAAIC,SAAS,EAAb;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,MAAMI,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,QAAIE,MAAML,MAAMG,CAAN,EAASF,KAAT,CAAe,GAAf,CAAV;AACA,QAAII,IAAID,MAAJ,IAAc,CAAlB,EAAqB;AACnBF,aAAOG,IAAI,CAAJ,CAAP,IAAiBA,IAAI,CAAJ,CAAjB;AACD;AACF;AACD,SAAO5B,GAAG,IAAH,EAASyB,MAAT,CAAP;AACD,CAfD;;AAiBA5B,SAASC,WAAT,GAAuBA,WAAvB;;AAEA+B,OAAOC,OAAP,GAAiBjC,QAAjB","file":"apkparser.js","sourcesContent":["var os = require('os');\nvar exec = require('child_process').execFile;\n\nvar path = require('path');\nvar extractRaw;\nvar parseApk;\nvar parseOutput;\n\nparseApk = function(filename, cb) {\n  var exeName = null;\n  if (os.type() === 'Darwin') {\n      exeName = 'aapt-osx-x86-64';\n  } else if (os.type() === 'Linux') {\n      exeName = 'aapt-linux';\n  } else {\n      throw new Error('Unknown OS!');\n  }\n  return exec(path.join(__dirname ,exeName), ['dump', 'badging', filename], {\n    maxBuffer: 1024 * 1024 * 1024\n  }, function(err, out) {\n    if (err) {\n      return cb(err);\n    }\n    return parseOutput(out, cb);\n  });\n};\n\nparseOutput = function(text, cb) {\n  var depth, element, indent, input, line;\n  var matches, name, parent, parts, rest, type, value, _i, _len;\n  if (!text) {\n    return cb(new Error('No input!'));\n  }\n  var lines = text.split('\\n');\n  var result = {};\n  for (var i = 0; i < lines.length; i++) {\n    var kvs = lines[i].split(':')\n    if (kvs.length == 2) {\n      result[kvs[0]] = kvs[1];\n    }\n  }\n  return cb(null, result);\n};\n\nparseApk.parseOutput = parseOutput;\n\nmodule.exports = parseApk;\n"]}