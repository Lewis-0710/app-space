{"version":3,"sources":["../controller.js"],"names":["router","Router","swagger","wrapper","title","description","version","swaggerHtmlEndpoint","swaggerJsonEndpoint","swaggerOptions","securityDefinitions","ApiKeyAuth","type","in","name","files","fs","readdirSync","js_files","filter","f","endsWith","console","log","mapping","require","map"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,SAAS,IAAIC,mBAAJ,EAAf;AACAC,kBAAQC,OAAR,CAAgBH,MAAhB;;AAEA;AACAA,OAAOE,OAAP,CAAe;AACbE,SAAO,kBADM,EACcC,aAAa,SAD3B,EACsCC,SAAS,OAD/C;AAEb;AACA;AACAC,uBAAqB,cAJR;AAKb;AACAC,uBAAqB,mBANR;;AAQb;AACA;AACAC,kBAAgB;AACdC,yBAAqB;AACnBC,kBAAY;AACVC,cAAM,QADI,EACMC,IAAI,QADV;AAEVC,cAAM;AAFI;AADO;AADP;AAVH,CAAf;;AAoBA,CAAC,YAAY;AACX,MAAIC,QAAQC,aAAGC,WAAH,CAAe,eAAf,CAAZ;AACA,MAAIC,WAAWH,MAAMI,MAAN,CAAcC,CAAD,IAAO;AACjC,WAAOA,EAAEC,QAAF,CAAW,KAAX,CAAP;AACD,GAFc,CAAf;;AAIA,OAAK,IAAID,CAAT,IAAcF,QAAd,EAAwB;AACtBI,YAAQC,GAAR,CAAa,uBAAsBH,CAAE,KAArC;AACA,QAAII,UAAUC,QAAQ,mBAAmBL,CAA3B,CAAd;AACAE,YAAQC,GAAR,CAAYC,OAAZ;AACAxB,WAAO0B,GAAP,CAAWF,OAAX;AACD;AACF,CAZD;;AAeA;AACA;AACA;;kBAEexB,M","file":"controller.js","sourcesContent":["import Router from 'koa-router';\nimport fs from 'fs';\nimport swagger from './swagger';\n\nconst router = new Router();\nswagger.wrapper(router);\n\n// 添加swagger的路由\nrouter.swagger({\n  title: 'App Space Server', description: 'API DOC', version: '1.0.0',\n  // [optional] default is root path. prefix : '/api', [optional] default is\n  // /swagger-html\n  swaggerHtmlEndpoint: '/api/swagger',\n  // [optional] default is /swagger-json\n  swaggerJsonEndpoint: '/api/swagger.json',\n\n  // [optional] additional options for building swagger doc eg. add api_key as\n  // shown below\n  swaggerOptions: {\n    securityDefinitions: {\n      ApiKeyAuth: {\n        type: 'apiKey', in: 'header',\n        name: 'Authorization'\n      }\n    }\n  }\n});\n\n(function () {\n  let files = fs.readdirSync('./controllers')\n  let js_files = files.filter((f) => {\n    return f.endsWith('.js')\n  })\n\n  for (let f of js_files) {\n    console.log(`process controller: ${f}...`)\n    let mapping = require('./controllers/' + f)\n    console.log(mapping)\n    router.map(mapping)\n  }\n})();\n\n\n// router.get('/', async (ctx, next) => {\n//   ctx.redirect(\"/index.html\")\n// });\n\nexport default router\n"]}