{"version":3,"sources":["../config.js"],"names":["fs","require","path","config","baseUrl","process","env","APP_SPA_DOMAIN","port","APP_SPA_PORT","iosPlistSource","iosInstallUrl","apiPrefix","secret","APP_SPA_SECRET","dbUser","APP_SPA_DBUSER","undefined","dbPass","APP_SPA_DBPWD","dbName","APP_SPA_DB_NAME","dbHost","APP_SPA_DB_HOST","dbPort","APP_SPA_DB_PORT","emailService","APP_SPA_EMAIL_SERVICE","emailUser","APP_SPA_EMAIL_USER","emailPass","APP_SPA_EMAIL_PASS","emailPort","APP_SPA_EMAIL_PORT","allowRegister","boolConfig","APP_SPA_ALLOW_REGISTER","adminAccount","adminPassword","openLdap","APP_SPA_ALLOW_LDAP","ldapServer","APP_SPA_LDAP_URL","ldapUserDn","APP_SPA_LDAP_USERDN","ldapBindCredentials","APP_SPA_LDAP_CREDENTIALS","ldapBase","APP_SPA_LDAP_BASE","storageType","STORAGE_TYPE","storageDir","STORAGE_DIR","join","__dirname","local","downloadUrl","qiniu","accessKey","QIN_IU_ACCESS_KEY","secretKey","QIN_IU_SECRET_KEY","bucketName","QIN_IU_BUCKET_NAME","QIN_IU_DOWNLOAD_URL","upyun","UP_YUN_STORAGE_DIR","serviceName","UP_YUN_SERVICE_NAME","operatorName","UP_YUN_OPERATOR_NAME","operatorPass","UP_YUN_OPERATOR_PASS","UP_YUN_DOWNLOAD_URL","s3","accessKeyId","AWS_ACCESS_KEY_ID","secretAccessKey","AWS_SECRET_ACCESS_KEY","sessionToken","AWS_SESSION_TOKEN","AWS_BUCKET_NAME","region","AWS_REGION","AWS_DOWNLOAD_URL","tencentcloud","TENCENT_CLOUD_ACCESS_KEY_ID","TENCENT_CLOUD_SECRET_ACCESS_KEY","TENCENT_CLOUD_BUCKET_NAME","TENCENT_CLOUD_REGION","TENCENT_CLOUD_DOWNLOAD_URL","oss","OSS_ACCESS_KEY_ID","OSS_SECRET_ACCESS_KEY","endpoint","OSS_ENDPOINT","OSS_BUCKET_NAME","prefix","OSS_PREFIX","OSS_DOWNLOAD_URL","jwt","tokenSecret","TOKEN_SECRET","smtpConfig","host","secure","auth","user","pass","redis","default","retry_strategy","options","error","code","Error","total_retry_time","times_connected","Math","max","attempt","log4js","appenders","console","type","categories","level","str"],"mappings":"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","file":"config.js","sourcesContent":["import os from \"os\";\n\nlet fs = require('fs');\nlet path = require('path');\n\n\nconst config = {\n  // baseUrl: process.env.APP_SPA_DOMAIN || \"http://127.0.0.1:80\", //baseUrl应用请求的url地址,比如https://appspace\n  // port: process.env.APP_SPA_PORT || '80', //server运行的端口\n  baseUrl: process.env.APP_SPA_DOMAIN || \"http://127.0.0.1:8085\", //baseUrl应用请求的url地址,比如https://appspace\n  port: process.env.APP_SPA_PORT || '8085', //server运行的端口\n\n  iosPlistSource: 'api', //[api,yun] api通过接口获取 yun通过云盘接口获取（前提有云盘存储） 解决ios本地无https接口 用云盘方案\n  //解决局域网iOS https证书 临时体验用\n  iosInstallUrl: \"https://127.0.0.1:443\",//undefined\n  // iosInstallPort: \"443\",//undefined\n  apiPrefix: 'api',\n  secret: process.env.APP_SPA_SECRET || 'secret', //secret\n  dbUser: process.env.APP_SPA_DBUSER || undefined, //数据库用户 (没有开启mongodb用户认证的可以不填写)\n  dbPass: process.env.APP_SPA_DBPWD || undefined, //数据库密码 (没有开启mongodb用户认证的可以不填写)\n  dbName: process.env.APP_SPA_DB_NAME || 'app_space',//'app_space', //数据库名称\n  dbHost: process.env.APP_SPA_DB_HOST ||'127.0.0.1',// 'mongo',// '127.0.0.1', //数据库地址\n\n  dbPort: process.env.APP_SPA_DB_PORT || '27017', //数据库端口\n\n  emailService: process.env.APP_SPA_EMAIL_SERVICE || 'qq', //邮件相关配置 用于找回密码和邀请团队成员发送邮件\n  emailUser: process.env.APP_SPA_EMAIL_USER || '',\n  emailPass: process.env.APP_SPA_EMAIL_PASS || '',\n  emailPort: process.env.APP_SPA_EMAIL_PORT || '587',\n\n  allowRegister: boolConfig(process.env.APP_SPA_ALLOW_REGISTER || 'false'), //是否允许用户注册,为否则后端注册接口不可用\n  adminAccount:'admin',\n  adminPassword:'app@space',\n\n  openLdap: boolConfig(process.env.APP_SPA_ALLOW_LDAP || 'false'), //是否开启ldap 默认是false 如果公司没有ldap服务可以不用理会\n  ldapServer: process.env.APP_SPA_LDAP_URL || '', //ldap server url\n  ldapUserDn: process.env.APP_SPA_LDAP_USERDN || '', //ldap管理员dn 也就是管理员用户名\n  ldapBindCredentials: process.env.APP_SPA_LDAP_CREDENTIALS || '', //ldap管理员密码\n  ldapBase: process.env.APP_SPA_LDAP_BASE || '', //ldap base\n\n  storageType: process.env.STORAGE_TYPE || 'local',//\"s3\",\n  storageDir: process.env.STORAGE_DIR || path.join(__dirname, '../docker/storage'),\n\n  // Config for local storage when storageType value is \"local\".\n  local: {\n    // downloadUrl\n      downloadUrl: process.env.APP_SPA_DOMAIN || \"http://192.168.1.140:8085\",\n  },\n  // Config for qiniu (http://www.qiniu.com/) cloud storage when storageType value is \"qiniu\".\n  qiniu: {\n    accessKey: process.env.QIN_IU_ACCESS_KEY,\n    secretKey: process.env.QIN_IU_SECRET_KEY,\n    bucketName: process.env.QIN_IU_BUCKET_NAME,\n    downloadUrl: process.env.QIN_IU_DOWNLOAD_URL // Binary files download host address.\n  },\n  // Config for upyun (https://www.upyun.com/) storage when storageType value is \"upyun\"\n  upyun: {\n    storageDir: process.env.UP_YUN_STORAGE_DIR,\n    serviceName: process.env.UP_YUN_SERVICE_NAME,\n    operatorName: process.env.UP_YUN_OPERATOR_NAME,\n    operatorPass: process.env.UP_YUN_OPERATOR_PASS,\n    downloadUrl: process.env.UP_YUN_DOWNLOAD_URL,\n  },\n\n  // Config for Amazon s3 (https://aws.amazon.com/cn/s3/) storage when storageType value is \"s3\".\n  s3: {\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID || '',\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY || '',\n    sessionToken: process.env.AWS_SESSION_TOKEN || '', //(optional)\n    bucketName: process.env.AWS_BUCKET_NAME || '',\n    region: process.env.AWS_REGION || '',\n    downloadUrl: process.env.AWS_DOWNLOAD_URL||'', // binary files download host address.\n  },\n  // Config for tencentyun COS (https://cloud.tencent.com/product/cos) when storageType value is \"oss\".\n  tencentcloud: {\n    accessKeyId: process.env.TENCENT_CLOUD_ACCESS_KEY_ID,\n    secretAccessKey: process.env.TENCENT_CLOUD_SECRET_ACCESS_KEY,\n    bucketName:process.env.TENCENT_CLOUD_BUCKET_NAME,\n    region: process.env.TENCENT_CLOUD_REGION,\n    downloadUrl: process.env.TENCENT_CLOUD_DOWNLOAD_URL, // binary files download host address.\n  },\n  // Config for Aliyun OSS (https://www.aliyun.com/product/oss) when storageType value is \"oss\".\n  oss: {\n    accessKeyId:  process.env.OSS_ACCESS_KEY_ID,\n    secretAccessKey:  process.env.OSS_SECRET_ACCESS_KEY,\n    endpoint:  process.env.OSS_ENDPOINT,\n    bucketName:  process.env.OSS_BUCKET_NAME,\n    prefix:  process.env.OSS_PREFIX, // Key prefix in object key\n    downloadUrl:  process.env.OSS_DOWNLOAD_URL, // binary files download host address.\n  },\n\n  jwt: {\n    // Recommended: 63 random alpha-numeric characters\n    // Generate using: https://www.grc.com/passwords.htm\n    tokenSecret: process.env.TOKEN_SECRET || 'INSERT_RANDOM_TOKEN_KEY'\n  },\n\n  // Config for smtp email，register module need validate user email project source https://github.com/nodemailer/nodemailer\n  smtpConfig: {\n    host: \"smtp.aliyun.com\",\n    port: 465,\n    secure: true,\n    auth: {\n      user: \"\",\n      pass: \"\"\n    }\n  },\n  // Config for redis (register module, tryLoginTimes module)\n  redis: {\n    default: {\n      host: \"127.0.0.1\",\n      port: 6379,\n      retry_strategy: function (options) {\n        if (options.error.code === 'ECONNREFUSED') {\n          // End reconnecting on a specific error and flush all commands with a individual error\n          return new Error('The server refused the connection');\n        }\n        if (options.total_retry_time > 1000 * 60 * 60) {\n          // End reconnecting after a specific timeout and flush all commands with a individual error\n          return new Error('Retry time exhausted');\n        }\n        if (options.times_connected > 10) {\n          // End reconnecting with built in error\n          return undefined;\n        }\n        // reconnect after\n        return Math.max(options.attempt * 100, 3000);\n      }\n    }\n  },\n  log4js: {\n    appenders: {console: {type: 'console'}},\n    categories: {\n      \"default\": {appenders: ['console'], level: 'all'},\n      \"startup\": {appenders: ['console'], level: 'all'},\n      \"http\": {appenders: ['console'], level: 'all'}\n    }\n  }\n};\n\nfunction boolConfig(str) {\n  return str === 'true'\n}\n\nexport default config;\n"]}